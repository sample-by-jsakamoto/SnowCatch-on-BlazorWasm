@using Toolbelt.Blazor.HotKeys
@inject HotKeys HotKeys
@implements IDisposable

<div
    style="width: @(Context.GameAreaSize.Width)px; height: @(Context.GameAreaSize.Height)px; background-color: black;position: relative;">

    <!-- Snow Flake -->
    <img src="assets/snowflake.svg"
        style="left:@(Context.SnowFlakeRect.X)px; top:@(Context.SnowFlakeRect.Y)px; width:@(Context.SnowFlakeRect.Width)px; height:@(Context.SnowFlakeRect.Height); position:absolute;" />

    <!-- Snow Man -->
    <img src="assets/snowman.svg"
        style="left:@(Context.SnowManRect.X)px; top:@(Context.SnowManRect.Y)px; width:@(Context.SnowManRect.Width)px; height:@(Context.SnowManRect.Height); position:absolute;" />
</div>

@code {
    private GameContext Context = new();

    private HotKeysContext HotKeysContext;

    protected override void OnInitialized()
    {
        this.Context.GameLoopTimer.Elapsed += GameLoopTimer_Elapsed;
        this.HotKeysContext = this.HotKeys.CreateContext();
        this.HotKeysContext.Add(ModKeys.None, Keys.Left, () => this.Context.MoveSnowManToLeft());
        this.HotKeysContext.Add(ModKeys.None, Keys.Right, () => this.Context.MoveSnowManToRight());
    }

    private void GameLoopTimer_Elapsed(object sender, EventArgs e)
    {
        this.StateHasChanged();
    }

    public void Dispose()
    {
        this.Context.GameLoopTimer.Elapsed -= GameLoopTimer_Elapsed;
        this.HotKeysContext.Dispose();
    }
}